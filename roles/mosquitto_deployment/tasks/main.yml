---

- name: Mosquitto | Add mosquitto user
  user:
    name: mosquitto

- name: SSL | Set certificates ownership to mosquitto
  file:
    path: /etc/mosquitto/certs
    owner: mosquitto
    group: mosquitto
    mode: 0644
    state: directory
    recurse: yes

- name: Mosquitto | RedHat/CentOS | Install Mosquitto dependencies
  yum:
    name: ['python36-pip', 'gcc', 'gcc-c++', 'openssl-devel', 'libuuid', 'libuuid-devel', 'mysql-devel']
    state: latest
  when: ansible_os_family == 'RedHat'

- name: Mosquitto | Debian | Install Mosquitto dependencies
  apt:
    pkg: ['gcc', 'g++', 'make', 'libssl-dev', 'uuid', 'uuid-dev', 'libmariadbclient-dev']
    state: latest
  when: ansible_os_family == 'Debian'

- name: Mosquitto | Installing Python3.6 repo
  yum:
    name: https://centos7.iuscommunity.org/ius-release.rpm
  when: ansible_os_family == 'RedHat'

- name: Mosquitto | Installing Python3.6
  yum:
    name: ['python36u', 'python36u-pip', 'python36u-devel', 'python36-setuptools']
    state: latest
  when: ansible_os_family == 'RedHat'

- name: Mosquitto | Debian | Installing Python3
  apt:
    pkg: ['python3', 'python3-pip', 'python3-dev', 'python-setuptools']
    state: latest
  when: ansible_os_family == 'Debian'

- name: Mosquitto | Check if Mosquitto already downloaded
  stat:
    path: "/tmp/mosquitto-{{ mosquitto_version | default(default_mosquitto_version) }}.tar.gz"
  register: mosquitto_found

- name: Mosquitto | Download Mosquitto
  get_url:
    url: http://mosquitto.org/files/source/mosquitto-{{ mosquitto_version | default(default_mosquitto_version) }}.tar.gz
    dest: /tmp/mosquitto-{{ mosquitto_version | default(default_mosquitto_version) }}.tar.gz
    mode: 0644
    owner: root
    group: root
  when: mosquitto_found.stat.exists == False

- name: Mosquitto | Extract Mosquitto
  shell: tar xvzf /tmp/mosquitto-{{ mosquitto_version | default(default_mosquitto_version) }}.tar.gz -C /tmp
  args:
    warn: false

- name: Mosquitto | Set mosquitto config build file
  replace:
    dest:  /tmp/mosquitto-{{ mosquitto_version | default(default_mosquitto_version) }}/config.mk
    regexp: "^WITH_SRV:=yes"
    replace: "WITH_SRV:=no"

- name: Mosquitto | Build Mosquitto project
  make:
    chdir: /tmp/mosquitto-{{ mosquitto_version | default(default_mosquitto_version) }}/

- name: Mosquitto | Install Mosquitto project
  make:
    chdir: /tmp/mosquitto-{{ mosquitto_version | default(default_mosquitto_version) }}/
    target: install

- name: Mosquitto | RedHat/CentOS | Installing PIP related dependencies
  pip:
    name: ['paho-mqtt', 'mysqlclient']
    executable: pip3.6
  when: ansible_os_family == 'RedHat'

- name: Mosquitto | Debian| Installing PIP related dependencies
  pip:
    name: ['paho-mqtt', 'mysqlclient']
    executable: pip3
  when: ansible_os_family == 'Debian'

- name: Mosquitto | Set ld.so.conf file
  template:
    src: ld.so.conf.j2
    dest: /etc/ld.so.conf
    owner: root
    group: root
    mode: 0644

- name: Mosquitto | Create symlink to libmosquitto.so.1 file
  file:
    src: /usr/local/lib/libmosquitto.so.1
    dest: /usr/lib/libmosquitto.so.1
    owner: root
    group: root
    state: link

- name: Mosquitto | Set mosquitto.conf file
  template:
    src: mosquitto.conf.j2
    dest: /etc/mosquitto/mosquitto.conf
    owner: mosquitto
    group: mosquitto
    mode: 0644

- name: Mosquitto | Creates logs directory
  file:
    path: /var/log/mosquitto
    state: directory
    owner: mosquitto
    group: mosquitto
    mode: 0766

- include: setup_auth_plug.yml

- include: set_mosquitto_systemd.yml

- name: Mosquitto | RedHat/CentOS | Open TLS Ports
  firewalld:
    zone: public
    port: "{{ item.port }}"
    permanent: "{{ item.permanent }}"
    state: enabled
  with_items:
    - { port: '{{ default_mosquitto_tls_port }}/tcp', permanent: true }
    - { port: '{{ default_mosquitto_port }}/tcp', permanent: true }
  when: ansible_os_family == 'RedHat'

- name: Mosquitto | RedHat/CentOS | Reload firewalld
  shell: firewall-cmd --reload
  when: ansible_os_family == 'RedHat'

#- name: Mosquitto | Debian | Open TLS Ports
#  ufw:
#    rule: allow
#    port: "{{ item.port }}"
#    proto: tcp
#    state: "{{ item.state }}"
#  with_items:
#    - { port: '{{ default_mosquitto_tls_port }}', state: enabled }
#    - { port: '{{ default_mosquitto_port }}', state: enabled }
#  when: ansible_os_family == 'Debian'
